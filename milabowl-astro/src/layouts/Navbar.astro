---
import Hamburger from "./Hamburger.astro";

const navLinks: { href: string, name: string }[] = [
	{
		href: "/blog",
		name: "Blog"
	},
	{
		href: "/nominations",
		name: "Nominations"
	},
	{
		href: "/standings",
		name: "Standings"
	},
    {
		href: "/rules",
		name: "Rules"
	},
    {
        href: "/memes",
        name: "Memes"
    },
    {
        href: "/awards",
        name: "Awards"
    },
    {
        href: "/history",
        name: "History"
    }
];

const { pathname } = Astro.url;
---
<nav class="bg-slate-100 dark:bg-slate-900 fixed top-0 w-full z-10">
    <div class="max-w-screen-2xl mx-auto px-4 2xl:px-0">
    <div class="flex h-14 items-center justify-between">
        <div class="flex items-center">
        <div class="flex-shrink-0">
            <a href="/" class="text-indigo-900 dark:text-dark-text text-xl font-bold no-underline">
                Milabowl
            </a>              
        </div>
        <div class="hidden md:block">
            <div class="ml-10 flex items-baseline space-x-4">

            {
                navLinks.map(m => {
                const isSelected = pathname.includes(m.href);
                const classes = isSelected ? "bg-slate-300 dark:bg-slate-800 text-indigo-900 dark:text-dark-text px-3 py-2 rounded-md text-sm font-bold no-underline" : 
                    "text-indigo-900 dark:text-dark-text hover:bg-slate-200 hover:dark:bg-slate-700 hover:text-indigo-900 px-3 py-2 rounded-md text-sm font-bold no-underline";
                return(
                    <a href={m.href} class={classes}>{m.name}</a>
                )})
            }
            </div>
        </div>
        </div>

        <button id="theme-toggle-1" class="hidden md:block text-indigo-900 dark:text-dark-text hover:bg-slate-200 hover:dark:bg-slate-800 block px-3 py-2 rounded-md text-base font-medium">
            <div class="hidden dark:block">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
                </svg>                      
            </div>
            <div class="block dark:hidden">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
                    <path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd" />
                </svg>                 
            </div>
        </button>
        
        <div class="-mr-2 flex md:hidden">
            <Hamburger/>
        </div>
    </div>
    </div>

    <div class="md:hidden" id="mobile-menu">
        <div class="space-y-1 px-2 pt-2 pb-3 sm:px-3 flex flex-col">
            {
            navLinks.map(m => {
                const isSelected = pathname.includes(m.href);
                const classes = isSelected ? "bg-slate-300 dark:bg-slate-800 text-indigo-900 dark:text-dark-text px-3 py-2 rounded-md text-sm font-bold no-underline" : 
                    "text-indigo-900 dark:text-dark-text hover:bg-slate-200 hover:dark:bg-slate-700 hover:text-indigo-900 px-3 py-2 rounded-md text-sm font-bold no-underline";
                return(
                <a href={m.href} class={classes}>{m.name}</a>
            )})
            }
            <button id="theme-toggle-2" class="self-end text-indigo-900 dark:text-dark-text hover:bg-slate-200 hover:dark:bg-slate-800 block px-3 py-2 rounded-md text-base font-medium">
                <div class="hidden dark:block">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
                    </svg>                      
                </div>
                <div class="block dark:hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
                        <path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd" />
                    </svg>                 
                </div>
            </button>
        </div>


    </div>
</nav>

<script is:inline>
    document.querySelector("#menu-hamburger")?.addEventListener("click", () => {
        document.querySelector("#mobile-menu")?.classList.toggle("expanded");
    });

    const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme') ?? 'light';
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
        }
        return 'light';
    })();
        
    if (theme === 'light') {
        document.documentElement.classList.remove('dark');
    } else {
        document.documentElement.classList.add('dark');
    }

    window.localStorage.setItem('theme', theme);

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");
        
        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    }

    document.getElementById("theme-toggle-1")?.addEventListener("click", handleToggleClick);
    document.getElementById("theme-toggle-2")?.addEventListener("click", handleToggleClick);
</script>

<style>
    #mobile-menu {
        display: none;
    }

    #mobile-menu.expanded {
        display: block;
    }
</style>