---
import Avatar from "../components/core/Avatar";
import AvatarProvider from "../components/core/AvatarProvider.astro";
import Layout from "../layouts/Layout.astro";
import Card from "../components/core/Card.astro";
import Table from "../components/core/Table/Table.astro";
import Trend from "./Trend";
import game_state from "../../src/game_state/game_state.json";
import type { MilaResultsDTO } from "../../src/game_state/gameState";
import Link from "../components/core/Link.astro";
import PositionDelta from "../components/core/PositionDelta.astro";
const milaResults: MilaResultsDTO = game_state;

const images: ImageMetadata[] = await Astro.glob("../assets/*").then(
  (files) => {
    return files.map((file) => file.default);
  }
);
---

<Layout title="Milabowl - Dashboard">
  <main>
    <div class="flex flex-col lg:grid lg:grid-cols-12 gap-4">
      <div class="lg:col-span-5">
        <Card title="Standings">
          <div slot="secondary">
            <Link href="/standings">See More</Link>
          </div>
          <Table>
            <tr slot="header">
              <th class="pr-1 pl-2 md:p-4">#</th>
              <th class="pl-0 md:p-4">Team</th>
              <th class="pl-0 md:p-4 right-align">GW</th>
              <th class="pr-0 pl-0 md:p-4 right-align hidden md:table-cell">Avg</th>
              <th class="pr-2 pl-0 md:p-4 right-align table-cell md:hidden">Total</th>
              <th class="right-align hidden md:table-cell">Total Score</th>
            </tr>

            {
              milaResults.resultsByWeek[
                milaResults.resultsByWeek.length - 1
              ].results.map((r, i) => {
                const deltaPosition =
                  r.milaRankLastWeek === null ||
                  r.milaRankLastWeek === undefined
                    ? 0
                    : r.milaRankLastWeek - r.milaRank;

                const isLastPlace =
                  milaResults.resultsByWeek[
                    milaResults.resultsByWeek.length - 1
                  ].results.length -
                    1 ===
                  i;
                return (
                  <tr class="border-1 border-slate-200 dark:border-slate-700">
                    <td class="pr-1 pl-2 md:p-4 p-3">
                      <div class="flex space-x-2 flex-row items-center justify-items-center">
                        <div class="flex flex-col items-center justify-between gap-1">
                          {isLastPlace && <span class="text-md">💩</span>}
                          {!isLastPlace && <span class="font-bold">{i + 1}</span>}
                          <PositionDelta delta={deltaPosition} />
                        </div>
                      </div>
                    </td>
                    <td class="pl-0 md:p-4">
                      <div class="flex items-center gap-2">
                        <Avatar teamName={r.teamName} client:idle>
                          <AvatarProvider userName={r.userName} />
                        </Avatar>
                        <Link
                          href={`/players/${r.teamName.replaceAll(" ", "-")}`}
                        >
                          {r.teamName}
                        </Link>
                      </div>
                    </td>
                    <td class="right-align pl-0 md:p-4">{r.milaPoints.total}</td>
                    <td class="right-align hidden md:table-cell">
                      {r.cumulativeAverageMilaPoints}
                    </td>
                    <td class="pr-2 pl-0 md:p-4 right-align font-bold text-indigo-900 dark:text-orange-200">
                      {r.cumulativeMilaPoints}
                    </td>
                  </tr>
                );
              })
            }
          </Table>
        </Card>
      </div>

      <div class="lg:col-span-7">
        <div class="grid grid-cols-12 gap-4">
          <div class="col-span-12 md:col-span-6 grid gap-4">
            <Card title="Bomb State">
              <div slot="secondary">
                <Link href="/bomb_history">See all</Link>
              </div>
              <div class="grid grid-cols-5 gap-2">
                {
                  milaResults.resultsByWeek
                    .slice(-5)
                    .reverse()
                    .map((r, i) => {
                      const bombHolder = r.results.find(
                        (rr) =>
                          rr.milaPoints.bombState !== null &&
                          (rr.milaPoints.bombState === "Holding" ||
                            rr.milaPoints.bombState === "Recieving" ||
                            rr.milaPoints.bombState === "Exploded")
                      );

                      const bombHander = r.results.find(
                        (rr) =>
                          rr.milaPoints.bombState !== null &&
                          rr.milaPoints.bombState.includes("Handing")
                      );
                      return (
                        <div class="col-span-5">
                          GW {r.gameWeek} -{" "}
                          {bombHander &&
                            `${bombHander?.teamName.substring(0, 14)}${
                              (bombHander?.teamName?.length ?? 0) >= 14
                                ? "..."
                                : ""
                            } 👋 =>`}
                          {bombHolder?.milaPoints.bombState !== "Exploded" &&
                            "💣"}
                          {bombHolder?.milaPoints.bombState === "Exploded" &&
                            "💥 (-3 pts) "}
                          {`${bombHolder?.teamName.substring(0, 14)}${
                            (bombHolder?.teamName?.length ?? 0) >= 14
                              ? "..."
                              : ""
                          }`}
                        </div>
                      );
                    })
                }
              </div>
            </Card>
          </div>
          <div class="col-span-12 md:col-span-6 grid gap-4">
            <Card title="Darth Maul">
              <div slot="secondary">
                <Link href="/darth_maul_history">See all</Link>
              </div>
              {
                milaResults.resultsByWeek
                  .filter((r) =>
                    r.results.some((rr) => rr.milaPoints.isDarthMaul)
                  )
                  .slice(-5)
                  .reverse()
                  .map((r, i) => {
                    return (
                      <div class="col-span-5">
                        GW {r.gameWeek} -
                        {(r.results.find(
                          (r) => r.milaPoints.isDarthMaulContender
                        )?.milaPoints.darthMaulPoints ?? 0) < 0 &&
                          `👺 ${r.results
                            .find((r) => r.milaPoints.isDarthMaul)
                            ?.teamName.substring(0, 10)}${
                            (r.results.find((r) => r.milaPoints.isDarthMaul)
                              ?.teamName?.length ?? 0) >= 10
                              ? "..."
                              : ""
                          } 🗡️=> `}
                        {r.results
                          .find((r) => r.milaPoints.isDarthMaulContender)
                          ?.teamName.substring(0, 10)}
                        {(r.results.find((r) => r.milaPoints.isDarthMaul)
                          ?.teamName?.length ?? 0) >= 10
                          ? "..."
                          : ""}
                        {(r.results.find(
                          (r) => r.milaPoints.isDarthMaulContender
                        )?.milaPoints.darthMaulPoints ?? 0) < 0 &&
                          `(${
                            r.results.find(
                              (r) => r.milaPoints.isDarthMaulContender
                            )?.milaPoints.darthMaulPoints
                          } pts)`}
                      </div>
                    );
                  })
              }
            </Card>
          </div>
          <div class="col-span-12">
            <Card title="Trend">
              <Trend client:load />
            </Card>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>
