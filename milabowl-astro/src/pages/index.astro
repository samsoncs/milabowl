---
import Layout from '../layouts/Layout.astro';
import Card from '../components/core/Card.astro';
import Trend from './_Trend';
import game_state from '../../src/game_state/game_state.json';
import bomb_state from '../../src/game_state/bomb_state.json';
import fpl_state from '../../src/game_state/fpl_state.json';
import type { MilaResultsDTO } from '../game_state/gameState';
import type { BombGameWeekState } from '../game_state/bombState';
import Link from '../components/core/Link.astro';
import OverviewTable from './_OverviewTable';
import type { ImageMetadata } from 'astro';

const milaResults: MilaResultsDTO = game_state;
const bombState: BombGameWeekState[] = bomb_state;

const imgs = Object.values(
    import.meta.glob<{ default: ImageMetadata }>('../assets/*.webp', {
        eager: true,
    })
);
const images = imgs.map((i) => i.default);
const lastGameWeek = Math.max.apply(
    Math,
    fpl_state.results.map((r) => r.gameWeek)
);
const resultsByUser = milaResults.resultsByUser;

// Transform data for Trend component - only last 5 gameweeks with minimal data
const trendData = resultsByUser.map((team) => ({
    teamName: team.teamName,
    results: team.results
        .slice(-5)
        .map(result => ({
            gameWeek: result.gameWeek,
            milaRank: result.milaRank,
            cumulativeAverageMilaPoints: result.cumulativeAverageMilaPoints,
        }))
}));
---

<Layout title="Milabowl - Dashboard" enableViewTransitions>
    <main>
        <div class="flex flex-col gap-4 lg:grid lg:grid-cols-12">
            <div class="lg:col-span-5">
                <Card title="Standings">
                    <div slot="secondary" class="flex flex-row gap-3">
                        <Link href="/standings">See More</Link>
                        {
                            milaResults.isLive && (
                                <div class="font-bold">ðŸ”´ Live</div>
                            )
                        }
                    </div>

                    <OverviewTable
                        avatars={images}
                        data={milaResults.overallScore}
                        lastGameWeek={lastGameWeek}
                        resultsByUser={resultsByUser}
                        client:idle
                    />
                </Card>
            </div>

            <div class="lg:col-span-7">
                <div class="grid grid-cols-12 gap-4">
                    <div class="col-span-12 grid gap-4">
                        <Card title="Bomb State">
                            <div slot="secondary">
                                <Link href="/bomb_history">See all</Link>
                            </div>
                            <div class="grid grid-cols-5 gap-2">
                                {
                                    bombState
                                        .slice(-5)
                                        .reverse()
                                        .map((r) => {
                                            return (
                                                <div class="col-span-5">
                                                    GW {r.gameWeek} -{' '}
                                                    {r.bombThrower &&
                                                        `${r.bombThrower.managerName.substring(0, 30)}${
                                                            (r.bombThrower
                                                                .managerName
                                                                ?.length ??
                                                                0) >= 30
                                                                ? '...'
                                                                : ''
                                                        } ðŸ‘‹ =>`}
                                                    {r.bombState !==
                                                        'Exploded' && 'ðŸ’£'}
                                                    {r.bombState ===
                                                        'Exploded' &&
                                                        'ðŸ’¥ (-3 pts) '}
                                                    {`${r.bombHolder.managerName.substring(0, 30)}${
                                                        (r.bombHolder
                                                            .managerName
                                                            ?.length ?? 0) >= 30
                                                            ? '...'
                                                            : ''
                                                    }`}
                                                </div>
                                            );
                                        })
                                }
                            </div>
                        </Card>
                    </div>
                    <div class="col-span-12">
                        <Card title="Trend">
                            <Trend teams={trendData} client:load />
                        </Card>
                    </div>
                </div>
            </div>
        </div>
    </main>
</Layout>
